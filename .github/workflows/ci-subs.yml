name: CI (subs)

on:
  pull_request:
    paths:
      - 'subs-mvp/**'
      - 'subs-mvp-*.zip'
      - '.github/workflows/ci-subs.yml'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      pg:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
    env:
      DB_DSN: postgresql://postgres:postgres@localhost:5432/postgres
      SUBS_INTERNAL_TOKEN: dummy
      PYTHONWARNINGS: "error::DeprecationWarning"
    steps:
      - uses: actions/checkout@v4

      - name: Prepare source dir
        run: |
          if [ -d subs-mvp ]; then
            echo "subs-mvp dir exists"
          else
            unzip -o subs-mvp-*.zip -d .
            [ -d subs-mvp ] || { echo "subs-mvp dir not found"; exit 1; }
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        working-directory: subs-mvp
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Smoke (import + open pool + simple query)
        working-directory: subs-mvp
        run: |
          python - <<'PY'
          import asyncio
          from app.db import pool
          async def main():
              await pool.open()
              async with pool.connection() as conn:
                  await conn.execute("SELECT 1;")
              await pool.close()
          asyncio.run(main())
          PY

      - name: Byte-compile check
        working-directory: subs-mvp
        run: python -m compileall -q app

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Prepare source dir
        run: |
          if [ -d subs-mvp ]; then
            echo "subs-mvp dir exists"
          else
            unzip -o subs-mvp-*.zip -d .
          fi
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Normalize repository owner
        run: echo "OWNER=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
      - uses: docker/build-push-action@v6
        with:
          context: ./subs-mvp
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/subs:latest
            ghcr.io/${{ env.OWNER }}/subs:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
